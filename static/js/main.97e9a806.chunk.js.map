{"version":3,"sources":["components/navbar/index.jsx","components/modal/index.jsx","components/create-quiz-form/index.jsx","configs/AppConfig.js","configs/EnvironmentConfig.js","service/socket.js","assets/audios/click.wav","pages/create-quiz/index.jsx","pages/home/index.jsx","pages/joid-quiz/index.jsx","routes/index.js","components/emoji/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","src","alt","index","props","id","onClick","onClose","children","InitialState","questions","question","choices","choice","color","answer","CreateQuizForm","onSubmit","useState","FormValue","setFormValue","QuestionFormError","setQuestionFormError","NbChoices","setNbChoices","useEffect","resetQuestionForm","$","val","empty","append","toggleModal","document","getElementById","classList","toggle","questionFormIsValide","QuestionObject","undefined","map","obj","length","substring","newQuestions","filter","q","i","removeQuestion","room","colors","newChoices","j","push","addColorsToChoices","console","log","type","name","placeholder","last","remove","each","input","this","API_BASE_URL","API_ENDPOINT_URL","socket","io","quizOver","quizStart","candidatesData","roomCreated","room_id","CreateQuizPage","QuizInfos","setQuizInfos","on","data","is_created","prevState","Audio","audio","play","style","animationDelay","sort","a","b","score","con","candidateName","emit","formValue","HomePage","condidateJoind","JoinQuizPage","error","setError","nameInputValue","setNameInputValue","roomInputValue","setRoomInputValue","canISendAnswer","setCanISendAnswer","disabled","splice","c","onChange","e","target","value","candidate_name","Index","exact","path","element","Emoji","currentEmoji","setCurrentEmoji","StarNumber","setStarNumber","removeParticle","timeout","setTimeout","clearInterval","bubblecount","width","size","Math","floor","random","fetch","then","res","json","stars","animate","borderSpacing","start","css","duration","easing","done","attr","heartcount","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"4PAaeA,MAVf,WACG,OACG,qBAAKC,UAAU,oCAAf,SACG,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,iBAAvB,SACG,qBAAKE,IAAI,qBAAqBC,IAAI,OAAOH,UAAU,e,0CCShDI,MAbf,SAAeC,GACZ,OACG,mCACG,qBAAKC,GAAG,QAAQN,UAAU,qBAA1B,SACG,sBAAKA,UAAU,cAAf,UACG,wBAAQA,UAAU,QAAQO,QAASF,EAAMG,UACzC,8BAAMH,EAAMI,mB,gBCJrBC,EAAe,CAClBC,UAAW,CACR,CACGC,SAAU,0BACVC,QAAS,CACN,CACGC,OAAQ,WACRC,MAAO,OAEV,CACGD,OAAQ,WACRC,MAAO,SAEV,CACGD,OAAQ,WACRC,MAAO,QAEV,CACGD,OAAQ,WACRC,MAAO,WAGbC,OAAQ,KAgQFC,MA3Pf,YAAuC,IAAbC,EAAY,EAAZA,SACvB,EAAkCC,mBAAST,GAA3C,mBAAOU,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,mBAAS,IAA7C,mBACA,GADA,UACkDA,mBAAS,KAA3D,mBAAOG,EAAP,KAA0BC,EAA1B,KACA,EAAkCJ,mBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WACPC,MACA,IAMH,IAAMA,EAAoB,WACvBJ,EAAqB,IACrBK,IAAE,aAAaC,IAAI,IACnBJ,EAAa,GAEbG,IAAE,iBAAiBE,QACnBF,IAAE,iBAAiBG,OAAnB,qzBA+BGC,EAAc,WACjBC,SAASC,eAAe,SAASC,UAAUC,OAAO,gBAClDT,KA4EGU,EAAuB,SAACC,GAC3B,GAA+B,IAA3BA,EAAe1B,eAA4C2B,IAA1BD,EAAetB,OACjD,OAAO,EAFoC,oBAI9BsB,EAAezB,SAJe,IAI9C,2BAAwC,CACrC,GAAkB,IADmB,QAC7BC,OACL,OAAO,GANiC,8BAU9C,OAAO,GAoCV,OACG,sBAAKd,UAAU,gCAAf,UACG,sBAAKA,UAAU,wBAAf,UAQG,wBAAQA,UAAU,iBAAiBO,QAASyB,EAA5C,0BAGCZ,EAAUT,UAAU6B,KAAI,SAACC,EAAKrC,GAAN,OACtB,sBAAiBJ,UAAU,qCAA3B,UACG,+BACG,4CAAaI,EAAQ,EAArB,SAECqC,EAAI7B,SAAS8B,OAAS,GAClBD,EAAI7B,SAAS+B,UAAU,EAAG,IAAM,SAChCF,EAAI7B,YAEZ,wBACGL,QAAS,kBAjFJ,SAACH,GACrB,IAAMwC,EAAexB,EAAUT,UAAUkC,QAAO,SAACC,EAAGC,GAAJ,OAAUA,GAAK3C,KAC/DiB,EAAa,2BACPD,GADM,IAETT,UAAWiC,KA6EgBI,CAAe5C,IAC9BJ,UAAU,+BAVNI,MAcb,qBAAKJ,UAAU,4BAAf,SACG,wBAAQA,UAAU,YAAYO,QAzCrB,WAClB,GAtCyB,IAAlBa,EAAU6B,MAAc7B,EAAUT,UAAU+B,OAAS,EAsCxC,CACjB,IAAME,EAvBe,WACxB,IAD8B,EACxBM,EAAS,CAAC,OAAQ,MAAO,SAAU,QAAS,SAAU,QACtDN,EAAe,GAFS,cAGhBxB,EAAUT,WAHM,IAG9B,2BAAmC,CAAC,IAAD,EAA1BoC,EAA0B,QAC1BI,EAAa,GACf/C,EAAQ,EAFoB,cAGlB2C,EAAElC,SAHgB,IAGhC,2BAAyB,CAAC,IAAjBuC,EAAgB,QACtBD,EAAWE,KAAK,CACbvC,OAAQsC,EAAEtC,OACVC,MAAOmC,EAAO9C,QANY,8BAShCwC,EAAaS,KAAK,CACfzC,SAAUmC,EAAEnC,SACZI,OAAQ+B,EAAE/B,OACVH,QAASsC,KAfe,8BAkB9B,OAAOP,EAKiBU,GAIrBpC,EAHa,CACVP,UAAWiC,SAIdW,QAAQC,IAAI,oBAiCN,yBAKN,cAAC,EAAD,CAAOhD,QAASwB,EAAhB,SACG,sBAAKhC,UAAU,OAAf,UAC0B,KAAtBsB,GACE,qBAAKtB,UAAU,gEAAf,SACG,mBAAGA,UAAU,eAAb,SAA6BsB,MAInC,uBACGtB,UAAU,qCACVyD,KAAK,OACLC,KAAK,WACLC,YAAY,WACZrD,GAAG,aAEN,sBAAKN,UAAU,YAAf,UACG,wBACGO,QA1KY,WACvBqB,IAAE,iBAAiBnB,WAAWiC,OAAS,IACxCd,IAAE,iBAAiBnB,WAAWmD,OAAOC,SACrCpC,EAAaD,EAAY,KAwKbxB,UAAU,iCAFb,eAMA,+BAAOwB,IACP,wBACGjB,QA1KY,WACvBqB,IAAE,iBAAiBnB,WAAWiC,OAAS,IACxCjB,EAAaD,EAAY,GAEzBI,IAAE,iBAAiBG,OAAnB,2YAYeP,EAZf,yCAuKYxB,UAAU,iCAFb,kBAOH,qBAAKM,GAAG,eAAeN,UAAU,UACjC,qBAAKA,UAAU,4BAAf,SACG,wBAAQA,UAAU,YAAYO,QA5J1B,WAChB,IAAM+B,EAAiB,CACpB1B,SAAU,GACVC,QAAS,GACTG,OAAQ,IAIXsB,EAAe1B,SAAWgB,IAAE,aAAaC,MACzCD,IAAE,kCAAkCkC,MAAK,SAAU1D,GAChD,IAAI2D,EAAQnC,IAAEoC,MACd1B,EAAezB,QAAQwC,KAAK,CACzBvC,OAAQiD,EAAMlC,WAGpBS,EAAetB,OAASY,IACrB,4CACDC,MAGEQ,EAAqBC,IACtBjB,EAAa,2BACPD,GADM,IAETT,UAAU,GAAD,mBAAMS,EAAUT,WAAhB,CAA2B2B,OAEvCN,IACAL,KAEAJ,EAAqB,yCAgIZ,qC,QC/QL0C,ECEA,CACVC,iBAAkB,+BDHWA,iBECnBC,EAASC,YAAG,GAAD,OAAIH,EAAJ,UCHT,MAA0B,kCCKnCvD,EAAe,CAClB2D,UAAU,EACVC,WAAW,EACXC,eAAgB,GAChBC,aAAa,EACbC,QAAS,MAqLGC,MAlLf,WACG,MAA4CvD,mBAAS,IAArD,mBACA,GADA,UACkCA,mBAAST,IAA3C,mBAAOiE,EAAP,KAAkBC,EAAlB,KAsEA,OApEAlD,qBAAU,WACPyC,EAAOU,GAAG,WAAW,kBAAMtB,QAAQC,IAAIW,EAAO7D,OAE9C6D,EAAOU,GAAG,eAAe,SAACC,GACnBA,EAAKC,YACNH,GAAa,SAACI,GACX,OAAO,2BACDA,GADN,IAEGR,aAAa,EACbC,QAASK,EAAKL,gBAM1BN,EAAOU,GAAG,mBAAmB,SAACC,GAC3B,IAAIG,MAAMC,GAAOC,OACjBP,GAAa,SAACI,GACX,OAAO,2BACDA,GADN,IAEGT,eAAgBO,EAAKP,eACrBC,aAAa,UAItBL,EAAOU,GAAG,mBAAmB,SAACC,GAC3BF,GAAa,SAACI,GACX,OAAO,2BACDA,GADN,IAEGpE,SAAUkE,EAAKlE,SACfC,QAASiE,EAAKjE,QACdyD,WAAW,UAKpBH,EAAOU,GAAG,gBAAgB,SAACC,GACxBF,GAAa,SAACI,GACX,OAAO,2BACDA,GADN,IAEGT,eAAgBO,EAAKP,uBAI9BJ,EAAOU,GAAG,aAAa,SAACC,GACrBF,GAAa,SAACI,GACX,OAAO,2BACDA,GADN,IAEGX,UAAU,YAInB,IAiBA,qBAAKrE,UAAU,sBAAf,SACK2E,EAAUH,YAEPG,EAAUL,WAAcK,EAAUN,SAiCnCM,EAAUL,YAAcK,EAAUN,SACnC,sBAAKrE,UAAU,wCAAf,UACG,sBAAKA,UAAU,0CAAf,UACG,oBAAIA,UAAU,4BAAd,SACI2E,EAAU/D,WAEd,oBAAIZ,UAAU,kCAAd,SACI2E,EAAU9D,QAAQ2B,KAAI,SAACC,EAAKrC,GAAN,OACpB,oBAEGJ,UAAS,+BAA0ByC,EAAI1B,MAA9B,KACTqE,MAAO,CAAEC,eAAe,GAAD,OAAa,GAARjF,EAAL,MAH1B,SAKIqC,EAAI3B,QAJAV,WASjB,qBAAKJ,UAAU,iBAAf,SACG,gCACG,oBAAIA,UAAU,mBAAd,wBACA,oBAAIA,UAAU,4CAAd,SACI2E,EAAUJ,eACPe,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,MAAQF,EAAEE,SAC3BjD,KAAI,SAACkD,EAAKtF,GAAN,OACF,qBAEGJ,UAAU,gDAFb,UAIG,sBAAKA,UAAU,QAAf,UACG,qBAAKE,IAAI,gCACT,oBAAIF,UAAU,GAAd,SAAkB0F,EAAIC,mBAEzB,sBAAM3F,UAAU,SAAhB,SAA0B0F,EAAID,UAPzBrF,gBAczBuE,EAAUL,WAAaK,EAAUN,SAClC,sBAAKrE,UAAU,cAAf,UACG,oBAAIA,UAAU,gBAAd,uBACA,oBAAIA,UAAU,4CAAd,SACI2E,EAAUJ,eACPe,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,MAAQF,EAAEE,SAC3BjD,KAAI,SAACkD,EAAKtF,GAAN,OACF,qBAEGJ,UAAU,yCAFb,UAIG,sBAAKA,UAAU,QAAf,UACG,qBAAKE,IAAI,gCACT,oBAAIF,UAAU,GAAd,SAAkB0F,EAAIC,mBAEzB,sBAAM3F,UAAU,SAAhB,SAA0B0F,EAAID,UAPzBrF,WAapB,8BACG,kDA9FH,sBAAKJ,UAAU,wCAAf,UACG,sBAAKA,UAAU,0CAAf,UACG,4CAAe2E,EAAUF,WACzB,uBACA,qBAAKzE,UAAU,sBAAf,SACG,wBAAQA,UAAU,YAAYO,QAhB9B,WACf4D,EAAOyB,KAAK,aAAc,CACvBnB,QAASE,EAAUF,WAcP,6BAKN,qBAAKzE,UAAU,iBAAf,SACG,gCACG,oBAAIA,UAAU,mBAAd,wBACA,oBAAIA,UAAU,4CAAd,SACI2E,EAAUJ,eACPe,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,MAAQF,EAAEE,SAC3BjD,KAAI,SAACkD,EAAKtF,GAAN,OACF,qBAEGJ,UAAU,gDAFb,UAIG,sBAAKA,UAAU,QAAf,UACG,qBAAKE,IAAI,gCACT,oBAAIF,UAAU,GAAd,SAAkB0F,EAAIC,mBAEzB,sBAAM3F,UAAU,SAAhB,SAA0B0F,EAAID,UAPzBrF,gBApB1B,cAAC,EAAD,CAAgBc,SAjBN,SAAC2E,GACjB1B,EAAOyB,KAAK,cAAeC,SCtDlBC,MAff,WACG,OACG,sBAAK9F,UAAU,WAAf,UACG,oBAAIA,UAAU,cAAd,kCACA,+BACG,cAAC,IAAD,CAAMC,GAAG,QAAT,uBAEA,cAAC,IAAD,CAAMA,GAAG,UAAUmF,MAAO,CAAEC,eAAgB,OAA5C,gCCPN3E,EAAe,CAClB2D,UAAU,EACVC,WAAW,EACXC,eAAgB,GAChBwB,gBAAgB,GAmMJC,MAhMf,WACG,MAA0B7E,mBAAS,IAAnC,mBAAO8E,EAAP,KAAcC,EAAd,KACA,EAA4C/E,mBAAS,IAArD,mBAAOgF,EAAP,KAAuBC,EAAvB,KACA,EAA4CjF,mBAAS,IAArD,mBAAOkF,EAAP,KAAuBC,EAAvB,KACA,EAA4CnF,oBAAS,GAArD,mBAAOoF,EAAP,KAAuBC,EAAvB,KACA,EAAkCrF,mBAAST,GAA3C,mBAAOiE,EAAP,KAAkBC,EAAlB,KA6EA,OA3EAlD,qBAAU,WACPyC,EAAOU,GAAG,WAAW,kBAAMtB,QAAQC,IAAIW,EAAO7D,OAE9C6D,EAAOU,GAAG,mBAAmB,SAACC,GACtBA,EAAKmB,MASPC,EAASpB,EAAKmB,OARdrB,GAAa,SAACI,GACX,OAAO,2BACDA,GADN,IAEGT,eAAgBO,EAAKP,eACrBwB,gBAAgB,UAQ5B5B,EAAOU,GAAG,mBAAmB,SAACC,GAC3BF,GAAa,SAACI,GACX,OAAO,2BACDA,GADN,IAEGpE,SAAUkE,EAAKlE,SACfC,QAASiE,EAAKjE,QACdyD,WAAW,OAGjBkC,GAAkB,MAGrBrC,EAAOU,GAAG,gBAAgB,SAACC,GACxBF,GAAa,SAACI,GACX,OAAO,2BACDA,GADN,IAEGT,eAAgBO,EAAKP,uBAK9BJ,EAAOU,GAAG,aAAa,SAACC,GACrBF,GAAa,SAACI,GACX,OAAO,2BACDA,GADN,IAEGX,UAAU,YAInB,IA8BA,qBAAKrE,UAAU,mBAAf,SACK2E,EAAUoB,eA2BPpB,EAAUL,WAAcK,EAAUN,SAMnCM,EAAUL,YAAcK,EAAUN,SACnC,sBAAKrE,UAAU,wCAAf,UACG,sBAAKA,UAAU,iBAAf,UACG,oBAAIA,UAAU,4BAAd,SACI2E,EAAU/D,WAEd,oBAAIZ,UAAU,iCAAd,SACI2E,EAAU9D,QAAQ2B,KAAI,SAACC,EAAKrC,GAAN,OACpB,oBAAIJ,UAAU,gBAAd,SACG,wBACGA,UAAS,+BAA0ByC,EAAI1B,OACvC0F,UAAWF,EACXhG,QAAS,kBAnEhBS,EAmEiCZ,OAlE9CmG,GACDpC,EAAOyB,KAAK,cAAe,CACxB5E,SACAyD,QAAS4B,IAGZG,GAAkB,IAElBjD,QAAQC,IAAI,+CATC,IAACxC,GAgEI,SAKIyB,EAAI3B,UANwBV,WAY5C,sBAAKJ,UAAU,iBAAf,UACG,oBAAIA,UAAU,mBAAd,4BACA,qBAAIA,UAAU,4CAAd,UACI2E,EAAUJ,eACPe,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,MAAQF,EAAEE,SAC3BjD,KAAI,SAACkD,EAAKtF,GAAN,OACF,qBAEGJ,UAAU,gDAFb,UAIG,sBAAKA,UAAU,QAAf,UACG,qBAAKE,IAAI,8BACT,oBAAIF,UAAU,GAAd,SAAkB0F,EAAIC,mBAEzB,sBAAM3F,UAAU,SAAhB,SAA0B0F,EAAID,UAPzBrF,MAUVsG,OAAO,EAAG,GACb/B,EAAUJ,eAAe7B,OAAS,GAChC,oBAAI1C,UAAU,oBAAd,SACG,oBAAIA,UAAU,cAAd,8BAMd2E,EAAUL,WAAaK,EAAUN,SAClC,sBAAKrE,UAAU,cAAf,UACG,oBAAIA,UAAU,gBAAd,uBACA,qBAAIA,UAAU,sCAAd,UACG,qBAAIA,UAAU,mBAAd,yBAGM2E,EAAUJ,eAAe1B,QACtB,SAAC8D,GAAD,OAAOA,EAAErG,IAAM6D,EAAO7D,MACvB,GAAGmF,SAGVd,EAAUJ,eAAee,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,MAAQF,EAAEE,SAAO,GACxDnF,KAAO6D,EAAO7D,GACf,oBAAIN,UAAU,cAAd,kCAEA,oBAAIA,UAAU,cAAd,yCAKT,8BACG,kDAzEH,sBAAKA,UAAU,oBAAf,UACG,4CACA,+DACA,qBAAKA,UAAU,cA9BlB,sBAAKA,UAAU,mBAAf,UACIiG,GACE,qBAAKjG,UAAU,gEAAf,SACG,mBAAGA,UAAU,eAAb,SAA6BiG,MAGnC,uBACGW,SAjBW,SAACC,GACxBP,EAAkBO,EAAEC,OAAOC,QAiBfpD,YAAY,OACZF,KAAK,OACLC,KAAK,OACL1D,UAAU,uCAEb,uBACG4G,SArBW,SAACC,GACxBT,EAAkBS,EAAEC,OAAOC,QAqBfpD,YAAY,YACZF,KAAK,OACLC,KAAK,OACL1D,UAAU,uCAEb,qBAAKA,UAAU,4BAAf,SACG,wBAAQA,UAAU,YAAYO,QAnD3B,WACf4D,EAAOyB,KAAK,aAAc,CACvBoB,eAAgBb,EAChB1B,QAAS4B,KAgDA,0B,OCpGHY,MAVf,WACG,OACG,eAAC,IAAD,WACG,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,MAC7B,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,UC8GzBC,MApHf,WACG,MAAwClG,mBAAS,GAAjD,mBAAOmG,EAAP,KAAqBC,EAArB,KACA,EAAoCpG,mBAAS,GAA7C,mBAAOqG,EAAP,KAAmBC,EAAnB,KAkEA,SAASC,IACN,IAAIC,EAAUC,YAAW,WAClBhG,IAAE,aAAac,OAAS,GACzBd,IAAE,aAAa,GAAGiC,SAClB6D,KAEAG,cAAcF,KAEjB,KAgCN,OAxGAjG,qBAAU,WA2CPE,IAAEkC,KAAKlC,IAAE,WAAW,WAEjB,IADA,IAAIkG,EAAelG,IAAEoC,MAAM+D,QAAU,GAAM,GAClChF,EAAI,EAAGA,GAAK+E,EAAa/E,IAAK,CACpC,IAAIiF,EAAOC,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,EAC3CvG,IAAEoC,MAAMjC,OACL,6CACIkG,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,IAClC,WACAF,KAAKC,MAAsB,GAAhBD,KAAKE,UAChB,WACAH,EACA,cACAA,EACA,uBACAC,KAAKC,MAAsB,EAAhBD,KAAKE,UAChB,mBAxDZC,MAAM,GAAD,OAAInE,EAAJ,WAA0BoE,MAAK,SAACC,GAClCA,EAAIC,OAAOF,MAAK,SAACvD,GACd2C,EAAc3C,EAAK0D,eAGzB,IAkGA,sBAAKjI,QA9BR,WACO+G,GAAgB,KACjB1F,IAAE,UAAU6G,QACT,CAAEC,cAAe,IACjB,CACGC,MAAO,WACJ/G,IAAEoC,MAAM4E,IAAI,YAAa,gBAE5BC,SAAU,IACVC,OAAQ,SACRC,KAAM,WACHnH,IAAE,UAAUgH,IAAI,YAAa,YAC7BhH,IAAE,cAAcoH,KACb,MACA,uBAAyB1B,EAAe,QAE3CC,EAAgBD,EAAe,MAtE3C1F,IAAEkC,KAAKlC,IAAE,WAAW,WAEjB,IADA,IAAIqH,EAAcrH,IAAEoC,MAAM+D,QAAU,GAAM,EACjChF,EAAI,EAAGA,GAAKkG,EAAYlG,IAAK,CACnC,IAAIiF,EAAOC,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,EAC3CvG,IAAEoC,MAAMjC,OACL,sCACIkG,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,IAClC,WACAF,KAAKC,MAAsB,GAAhBD,KAAKE,UAChB,WACAH,EACA,cACAA,EACA,uBACAC,KAAKE,SACL,mBA4DTP,YAAW,WACRF,MACA,KAxFNU,MAAM,GAAD,OAAInE,EAAJ,mBAAkCoE,MAAK,SAACC,GAC1Cb,EAAcD,EAAa,GAC3BY,MAAM,+BAA+BC,MAAK,SAACC,GACxCA,EAAIC,OAAOF,MAAK,SAACvD,GACd2C,EAAc3C,EAAK0D,kBA2FLxI,UAAU,QAAjC,UACG,qBAAKM,GAAG,YAAYJ,IAAI,4BAA4BC,IAAI,KACxD,sBAAMH,UAAU,gBAAhB,SAAiCwH,QCjG3B0B,MAdf,WACG,OACG,cAAC,IAAD,UACG,sBAAKlJ,UAAU,sCAAf,UACG,cAAC,EAAD,IACA,qBAAKA,UAAU,MAAf,SACG,cAAC,EAAD,MAEH,cAAC,EAAD,UCDGmJ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,YCAdO,IAASC,OACN,cAAC,IAAMC,WAAP,UACG,cAAC,EAAD,MAEH5H,SAASC,eAAe,SAM3BiH,M","file":"static/js/main.97e9a806.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Navbar() {\n   return (\n      <div className=\"flex justify-between bg-white p-8\">\n         <Link to=\"/\" className=\"cursor-pointer\">\n            <img src=\"/assets/logo-1.png\" alt=\"logo\" className=\"h-20 \" />\n         </Link>\n      </div>\n   );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./style.scss\";\n\nfunction index(props) {\n   return (\n      <>\n         <div id=\"modal\" className=\"modal disableModal\">\n            <div className=\"modal__wrap\">\n               <button className=\"close\" onClick={props.onClose}></button>\n               <div>{props.children}</div>\n            </div>\n         </div>\n      </>\n   );\n}\n\nexport default index;\n","import React, { useEffect, useState } from \"react\";\nimport \"./style.scss\";\nimport Modal from \"../modal\";\nimport $ from \"jquery\";\n\nconst InitialState = {\n   questions: [\n      {\n         question: \"question number 1 ... ?\",\n         choices: [\n            {\n               choice: \"choice 1\",\n               color: \"red\",\n            },\n            {\n               choice: \"choice 2\",\n               color: \"green\",\n            },\n            {\n               choice: \"choice 3\",\n               color: \"blue\",\n            },\n            {\n               choice: \"choice 4\",\n               color: \"yellow\",\n            },\n         ],\n         answer: 1,\n      },\n   ],\n};\n\nfunction CreateQuizForm({ onSubmit }) {\n   const [FormValue, setFormValue] = useState(InitialState);\n   const [FormErrors, setFormErrors] = useState(\"\");\n   const [QuestionFormError, setQuestionFormError] = useState(\"\");\n   const [NbChoices, setNbChoices] = useState(2);\n\n   useEffect(() => {\n      resetQuestionForm();\n   }, []);\n\n   // useEffect(() => {\n   //    console.log(FormValue);\n   // }, [FormValue]);\n\n   const resetQuestionForm = () => {\n      setQuestionFormError(\"\");\n      $(\"#question\").val(\"\");\n      setNbChoices(2);\n\n      $(\"#choices-list\").empty();\n      $(\"#choices-list\").append(`                  \n         <div class=\"flex items-center\">\n            <input\n               class=\"form-control w-full h-12 py-4 mb-8\"\n               type=\"text\"\n               name=\"choice\"\n               placeholder=\"choice\"\n            />\n            <input\n               class=\"ml-6\"\n               type=\"radio\"\n               name=\"answer\"\n               value=\"0\"\n            />\n         </div>\n         <div class=\"flex items-center\">\n            <input\n               class=\"form-control w-full h-12 py-4 mb-8\"\n               type=\"text\"\n               name=\"choice\"\n               placeholder=\"choice\"\n            />\n            <input\n               class=\"ml-6\"\n               type=\"radio\"\n               name=\"answer\"\n               value=\"1\"\n            />\n         </div>`);\n   };\n\n   const toggleModal = () => {\n      document.getElementById(\"modal\").classList.toggle(\"disableModal\");\n      resetQuestionForm();\n   };\n\n   const decreaseChoicesNumber = () => {\n      if ($(\"#choices-list\").children().length > 2) {\n         $(\"#choices-list\").children().last().remove();\n         setNbChoices(NbChoices - 1);\n      }\n   };\n\n   const increaseChoicesNumber = () => {\n      if ($(\"#choices-list\").children().length < 6) {\n         setNbChoices(NbChoices + 1);\n\n         $(\"#choices-list\").append(`                  \n            <div class=\"flex items-center\">\n            <input\n               class=\"form-control w-full h-12 py-4 mb-8\"\n               type=\"text\"\n               name=\"choice\"\n               placeholder=\"choice\"\n            />\n            <input\n               class=\"ml-6\"\n               type=\"radio\"\n               name=\"answer\"\n               value=\"${NbChoices}\"\n            />\n         </div>`);\n      }\n   };\n\n   const addQestion = () => {\n      const QuestionObject = {\n         question: \"\",\n         choices: [],\n         answer: \"\",\n      };\n\n      // get the form values\n      QuestionObject.question = $(\"#question\").val();\n      $(\"#choices-list input[type=text]\").each(function (index) {\n         var input = $(this);\n         QuestionObject.choices.push({\n            choice: input.val(),\n         });\n      });\n      QuestionObject.answer = $(\n         \"#choices-list input[name=answer]:checked\"\n      ).val();\n\n      // check if the question form is valide\n      if (questionFormIsValide(QuestionObject)) {\n         setFormValue({\n            ...FormValue,\n            questions: [...FormValue.questions, QuestionObject],\n         });\n         toggleModal();\n         resetQuestionForm();\n      } else {\n         setQuestionFormError(\"please fill in all required fields !\");\n      }\n   };\n\n   const removeQuestion = (index) => {\n      const newQuestions = FormValue.questions.filter((q, i) => i != index);\n      setFormValue({\n         ...FormValue,\n         questions: newQuestions,\n      });\n   };\n\n   const formIsValide = () => {\n      return FormValue.room != \"\" && FormValue.questions.length > 0;\n   };\n\n   const questionFormIsValide = (QuestionObject) => {\n      if (QuestionObject.question == \"\" || QuestionObject.answer === undefined)\n         return false;\n\n      for (let obj of QuestionObject.choices) {\n         if (obj.choice == \"\") {\n            return false;\n         }\n      }\n\n      return true;\n   };\n\n   const addColorsToChoices = () => {\n      const colors = [\"blue\", \"red\", \"yellow\", \"green\", \"purple\", \"pink\"];\n      const newQuestions = [];\n      for (let i of FormValue.questions) {\n         const newChoices = [];\n         let index = 0;\n         for (let j of i.choices) {\n            newChoices.push({\n               choice: j.choice,\n               color: colors[index++],\n            });\n         }\n         newQuestions.push({\n            question: i.question,\n            answer: i.answer,\n            choices: newChoices,\n         });\n      }\n      return newQuestions;\n   };\n\n   const onFormSubmit = () => {\n      if (formIsValide()) {\n         const newQuestions = addColorsToChoices();\n         const data = {\n            questions: newQuestions,\n         };\n         onSubmit(data);\n      } else {\n         console.log(\"form not valide\");\n      }\n   };\n\n   return (\n      <div className=\"create__quiz__form border bg-\">\n         <div className=\"max-w-5xl mx-auto p-8\">\n            {/* <input\n               className=\"form-control max-w-sm h-12 py-4 mb-8\"\n               type=\"text\"\n               name=\"room\"\n               placeholder=\"Room Name\"\n               onChange={onRoomInputChange}\n            /> */}\n            <button className=\"button__2 mb-8\" onClick={toggleModal}>\n               Add question\n            </button>\n            {FormValue.questions.map((obj, index) => (\n               <div key={index} className=\"flex justify-between py-4 border-b\">\n                  <h3>\n                     <strong>{`Q${index + 1} - `}</strong>\n\n                     {obj.question.length > 20\n                        ? obj.question.substring(0, 20) + \" . . .\"\n                        : obj.question}\n                  </h3>\n                  <button\n                     onClick={() => removeQuestion(index)}\n                     className=\"remove__question__button\"\n                  ></button>\n               </div>\n            ))}\n            <div className=\"flex justify-center my-12\">\n               <button className=\"button__1\" onClick={onFormSubmit}>\n                  create\n               </button>\n            </div>\n         </div>\n         <Modal onClose={toggleModal}>\n            <div className=\"mt-6\">\n               {QuestionFormError !== \"\" && (\n                  <div className=\"max-w-lg mx-auto p-2 text-center mb-8 border-b border-red-400\">\n                     <p className=\"text-red-400\">{QuestionFormError}</p>\n                  </div>\n               )}\n\n               <input\n                  className=\"form-control w-full h-12 py-4 mb-8\"\n                  type=\"text\"\n                  name=\"question\"\n                  placeholder=\"Question\"\n                  id=\"question\"\n               />\n               <div className=\"mb-4 ml-6\">\n                  <button\n                     onClick={decreaseChoicesNumber}\n                     className=\"px-4 pb-1 text-4xl mx-4 border\"\n                  >\n                     -\n                  </button>\n                  <span>{NbChoices}</span>\n                  <button\n                     onClick={increaseChoicesNumber}\n                     className=\"px-4 pb-1 text-4xl mx-4 border\"\n                  >\n                     +\n                  </button>\n               </div>\n               <div id=\"choices-list\" className=\"ml-12\"></div>\n               <div className=\"flex justify-center my-12\">\n                  <button className=\"button__1\" onClick={addQestion}>\n                     Add Question\n                  </button>\n               </div>\n            </div>\n         </Modal>\n      </div>\n   );\n}\n\nexport default CreateQuizForm;\n","import { env } from \"./EnvironmentConfig\";\r\n\r\nexport const API_BASE_URL = env.API_ENDPOINT_URL;\r\n","const dev = {\r\n   API_ENDPOINT_URL: \"http://localhost:5000\",\r\n};\r\n\r\nconst prod = {\r\n   API_ENDPOINT_URL: \"http://141.145.209.172:5000\",\r\n};\r\n\r\nconst test = {\r\n   API_ENDPOINT_URL: \"http://localhost:5000\",\r\n};\r\n\r\nconst getEnv = () => {\r\n   switch (process.env.NODE_ENV) {\r\n      case \"development\":\r\n         return dev;\r\n      case \"production\":\r\n         return prod;\r\n      case \"test\":\r\n         return test;\r\n      default:\r\n         break;\r\n   }\r\n};\r\n\r\nexport const env = getEnv();\r\n","import io from \"socket.io-client\";\nimport { API_BASE_URL } from \"configs/AppConfig\";\n\nexport const socket = io(`${API_BASE_URL}/quiz`);\n","export default __webpack_public_path__ + \"static/media/click.1b1743f7.wav\";","import React, { useEffect, useState } from \"react\";\nimport CreateQuizForm from \"components/create-quiz-form\";\nimport { socket } from \"service/socket\";\nimport audio from \"assets/audios/click.wav\";\n\nconst InitialState = {\n   quizOver: false,\n   quizStart: false,\n   candidatesData: [],\n   roomCreated: false,\n   room_id: null,\n};\n\nfunction CreateQuizPage() {\n   const [roomInputValue, setRoomInputValue] = useState(\"\");\n   const [QuizInfos, setQuizInfos] = useState(InitialState);\n\n   useEffect(() => {\n      socket.on(\"connect\", () => console.log(socket.id));\n\n      socket.on(\"room-status\", (data) => {\n         if (data.is_created) {\n            setQuizInfos((prevState) => {\n               return {\n                  ...prevState,\n                  roomCreated: true,\n                  room_id: data.room_id,\n               };\n            });\n         }\n      });\n\n      socket.on(\"candidate-joind\", (data) => {\n         new Audio(audio).play();\n         setQuizInfos((prevState) => {\n            return {\n               ...prevState,\n               candidatesData: data.candidatesData,\n               roomCreated: true,\n            };\n         });\n      });\n      socket.on(\"update-question\", (data) => {\n         setQuizInfos((prevState) => {\n            return {\n               ...prevState,\n               question: data.question,\n               choices: data.choices,\n               quizStart: true,\n            };\n         });\n      });\n\n      socket.on(\"update-score\", (data) => {\n         setQuizInfos((prevState) => {\n            return {\n               ...prevState,\n               candidatesData: data.candidatesData,\n            };\n         });\n      });\n      socket.on(\"quiz-over\", (data) => {\n         setQuizInfos((prevState) => {\n            return {\n               ...prevState,\n               quizOver: true,\n            };\n         });\n      });\n   }, []);\n\n   const createRoom = (formValue) => {\n      socket.emit(\"create-room\", formValue);\n      // setQuizInfos({\n      //    ...QuizInfos,\n      //    room: formValue.room,\n      // });\n   };\n\n   const startQuiz = () => {\n      socket.emit(\"start-quiz\", {\n         room_id: QuizInfos.room_id,\n      });\n   };\n\n   return (\n      <div className=\"create__quiz__part \">\n         {!QuizInfos.roomCreated ? (\n            <CreateQuizForm onSubmit={createRoom} />\n         ) : !QuizInfos.quizStart && !QuizInfos.quizOver ? (\n            <div className=\"md:grid md:grid-cols-3 mx-auto border\">\n               <div className=\"p-8 border-r border-gray-100 col-span-2\">\n                  <h4>Room ID : {QuizInfos.room_id}</h4>\n                  <br />\n                  <div className=\"flex justify-center\">\n                     <button className=\"button__1\" onClick={startQuiz}>\n                        Start Quiz\n                     </button>\n                  </div>\n               </div>\n               <div className=\"p-8 col-span-1\">\n                  <div>\n                     <h3 className=\"text-center mb-8\">Candidates</h3>\n                     <ul className=\"candidates__list border max-w-3xl mx-auto\">\n                        {QuizInfos.candidatesData\n                           .sort((a, b) => b.score - a.score)\n                           .map((con, index) => (\n                              <li\n                                 key={index}\n                                 className=\"candidates__item flex justify-between  w-full\"\n                              >\n                                 <div className=\"flex \">\n                                    <img src=\"/assets/icons/candidate.svg\" />\n                                    <h5 className=\"\">{con.candidateName}</h5>\n                                 </div>\n                                 <span className=\"score \">{con.score}</span>\n                              </li>\n                           ))}\n                     </ul>\n                  </div>\n               </div>\n            </div>\n         ) : QuizInfos.quizStart && !QuizInfos.quizOver ? (\n            <div className=\"md:grid md:grid-cols-3 mx-auto border\">\n               <div className=\"p-8 border-r border-gray-100 col-span-2\">\n                  <h2 className=\"question text-center mb-8\">\n                     {QuizInfos.question}\n                  </h2>\n                  <ul className=\"choice__list max-w-5xl mx-auto \">\n                     {QuizInfos.choices.map((obj, index) => (\n                        <li\n                           key={index}\n                           className={`choice__item choice__${obj.color} `}\n                           style={{ animationDelay: `${index * 0.3}s` }}\n                        >\n                           {obj.choice}\n                        </li>\n                     ))}\n                  </ul>\n               </div>\n               <div className=\"p-8 col-span-1\">\n                  <div>\n                     <h3 className=\"text-center mb-8\">Candidates</h3>\n                     <ul className=\"candidates__list border max-w-3xl mx-auto\">\n                        {QuizInfos.candidatesData\n                           .sort((a, b) => b.score - a.score)\n                           .map((con, index) => (\n                              <li\n                                 key={index}\n                                 className=\"candidates__item flex justify-between  w-full\"\n                              >\n                                 <div className=\"flex \">\n                                    <img src=\"/assets/icons/candidate.svg\" />\n                                    <h5 className=\"\">{con.candidateName}</h5>\n                                 </div>\n                                 <span className=\"score \">{con.score}</span>\n                              </li>\n                           ))}\n                     </ul>\n                  </div>\n               </div>\n            </div>\n         ) : QuizInfos.quizStart && QuizInfos.quizOver ? (\n            <div className=\"text-center\">\n               <h2 className=\"text-7xl mb-8\">Quiz Over</h2>\n               <ul className=\"candidates__list border max-w-3xl mx-auto\">\n                  {QuizInfos.candidatesData\n                     .sort((a, b) => b.score - a.score)\n                     .map((con, index) => (\n                        <li\n                           key={index}\n                           className=\"candidates__item flex justify-between \"\n                        >\n                           <div className=\"flex \">\n                              <img src=\"/assets/icons/candidate.svg\" />\n                              <h5 className=\"\">{con.candidateName}</h5>\n                           </div>\n                           <span className=\"score \">{con.score}</span>\n                        </li>\n                     ))}\n               </ul>\n            </div>\n         ) : (\n            <div>\n               <h2>somthing wrong</h2>\n            </div>\n         )}\n      </div>\n   );\n}\n\nexport default CreateQuizPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction HomePage() {\n   return (\n      <div className=\"homepage\">\n         <h2 className=\"text-center\">Welcome to Quiz Test</h2>\n         <ul>\n            <Link to=\"/join\">Join Quiz</Link>\n\n            <Link to=\"/Create\" style={{ animationDelay: \".3s\" }}>\n               Create Quiz\n            </Link>\n         </ul>\n      </div>\n   );\n}\n\nexport default HomePage;\n","import React, { useEffect, useState } from \"react\";\nimport { socket } from \"service/socket\";\n\nconst InitialState = {\n   quizOver: false,\n   quizStart: false,\n   candidatesData: [],\n   condidateJoind: false,\n};\n\nfunction JoinQuizPage() {\n   const [error, setError] = useState(\"\");\n   const [nameInputValue, setNameInputValue] = useState(\"\");\n   const [roomInputValue, setRoomInputValue] = useState(\"\");\n   const [canISendAnswer, setCanISendAnswer] = useState(false);\n   const [QuizInfos, setQuizInfos] = useState(InitialState);\n\n   useEffect(() => {\n      socket.on(\"connect\", () => console.log(socket.id));\n\n      socket.on(\"candidate-joind\", (data) => {\n         if (!data.error) {\n            setQuizInfos((prevState) => {\n               return {\n                  ...prevState,\n                  candidatesData: data.candidatesData,\n                  condidateJoind: true,\n               };\n            });\n         } else {\n            setError(data.error);\n         }\n      });\n\n      socket.on(\"update-question\", (data) => {\n         setQuizInfos((prevState) => {\n            return {\n               ...prevState,\n               question: data.question,\n               choices: data.choices,\n               quizStart: true,\n            };\n         });\n         setCanISendAnswer(true);\n      });\n\n      socket.on(\"update-score\", (data) => {\n         setQuizInfos((prevState) => {\n            return {\n               ...prevState,\n               candidatesData: data.candidatesData,\n            };\n         });\n      });\n\n      socket.on(\"quiz-over\", (data) => {\n         setQuizInfos((prevState) => {\n            return {\n               ...prevState,\n               quizOver: true,\n            };\n         });\n      });\n   }, []);\n\n   const joindRoom = () => {\n      socket.emit(\"joind-room\", {\n         candidate_name: nameInputValue,\n         room_id: roomInputValue,\n      });\n   };\n\n   const sendAnswer = (answer) => {\n      if (canISendAnswer) {\n         socket.emit(\"send-answer\", {\n            answer,\n            room_id: roomInputValue,\n         });\n\n         setCanISendAnswer(false);\n      } else {\n         console.log(\"you already send answer for this question \");\n      }\n   };\n\n   const onRoomInputChange = (e) => {\n      setRoomInputValue(e.target.value);\n   };\n   const onNameInputChange = (e) => {\n      setNameInputValue(e.target.value);\n   };\n\n   return (\n      <div className=\"join__quiz__part\">\n         {!QuizInfos.condidateJoind ? (\n            <div className=\"max-w-xl mx-auto\">\n               {error && (\n                  <div className=\"max-w-lg mx-auto p-2 text-center mb-8 border-b border-red-400\">\n                     <p className=\"text-red-400\">{error}</p>\n                  </div>\n               )}\n               <input\n                  onChange={onRoomInputChange}\n                  placeholder=\"room\"\n                  type=\"text\"\n                  name=\"room\"\n                  className=\"form-control w-full h-12 py-4 mb-8\"\n               />\n               <input\n                  onChange={onNameInputChange}\n                  placeholder=\"Your name\"\n                  type=\"text\"\n                  name=\"room\"\n                  className=\"form-control w-full h-12 py-4 mb-8\"\n               />\n               <div className=\"flex justify-center my-12\">\n                  <button className=\"button__1\" onClick={joindRoom}>\n                     join\n                  </button>\n               </div>\n            </div>\n         ) : !QuizInfos.quizStart && !QuizInfos.quizOver ? (\n            <div className=\"mt-12 text-center\">\n               <h2>Wait . . .</h2>\n               <h3>Quiz will start in any moment</h3>\n               <div className=\"circle\"></div>\n            </div>\n         ) : QuizInfos.quizStart && !QuizInfos.quizOver ? (\n            <div className=\"md:grid md:grid-cols-3 mx-auto border\">\n               <div className=\"p-8 col-span-2\">\n                  <h2 className=\"question text-center mb-8\">\n                     {QuizInfos.question}\n                  </h2>\n                  <ul className=\"choice__list max-w-2xl mx-auto\">\n                     {QuizInfos.choices.map((obj, index) => (\n                        <li className=\"choice__item \" key={index}>\n                           <button\n                              className={`choice__item choice__${obj.color}`}\n                              disabled={!canISendAnswer}\n                              onClick={() => sendAnswer(index)}\n                           >\n                              {obj.choice}\n                           </button>\n                        </li>\n                     ))}\n                  </ul>\n               </div>\n               <div className=\"p-8 col-span-1\">\n                  <h3 className=\"text-center mb-8\">Top Candidates</h3>\n                  <ul className=\"candidates__list border max-w-3xl mx-auto\">\n                     {QuizInfos.candidatesData\n                        .sort((a, b) => b.score - a.score)\n                        .map((con, index) => (\n                           <li\n                              key={index}\n                              className=\"candidates__item flex justify-between  w-full\"\n                           >\n                              <div className=\"flex \">\n                                 <img src=\"/assets/icons/avatar2.svg\" />\n                                 <h5 className=\"\">{con.candidateName}</h5>\n                              </div>\n                              <span className=\"score \">{con.score}</span>\n                           </li>\n                        ))\n                        .splice(0, 3)}\n                     {QuizInfos.candidatesData.length > 3 && (\n                        <li className=\"candidates__item \">\n                           <h5 className=\"text-center\">. . .</h5>\n                        </li>\n                     )}\n                  </ul>\n               </div>\n            </div>\n         ) : QuizInfos.quizStart && QuizInfos.quizOver ? (\n            <div className=\"text-center\">\n               <h2 className=\"text-7xl mb-8\">Quiz Over</h2>\n               <ul className=\"candidates__list  max-w-3xl mx-auto\">\n                  <h3 className=\"text-center mb-8\">\n                     Your Score :\n                     {\n                        QuizInfos.candidatesData.filter(\n                           (c) => c.id == socket.id\n                        )[0].score\n                     }\n                  </h3>\n                  {QuizInfos.candidatesData.sort((a, b) => b.score - a.score)[0]\n                     .id === socket.id ? (\n                     <h2 className=\"text-center\">You Win 🥳</h2>\n                  ) : (\n                     <h2 className=\"text-center\">You Lose 😞</h2>\n                  )}\n               </ul>\n            </div>\n         ) : (\n            <div>\n               <h2>somthing wrong</h2>\n            </div>\n         )}\n      </div>\n   );\n}\n\nexport default JoinQuizPage;\n","import CreateQuizPage from \"pages/create-quiz\";\nimport HomePage from \"pages/home\";\nimport JoinQuizPage from \"pages/joid-quiz\";\nimport React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\n\nfunction Index() {\n   return (\n      <Routes>\n         <Route exact path=\"/\" element={<HomePage />} />\n         <Route path=\"/join\" element={<JoinQuizPage />} />\n         <Route path=\"/create\" element={<CreateQuizPage />} />\n      </Routes>\n   );\n}\n\nexport default Index;\n","import React, { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\n\nimport { API_BASE_URL } from \"configs/AppConfig\";\n\nfunction Emoji() {\n   const [currentEmoji, setCurrentEmoji] = useState(2);\n   const [StarNumber, setStarNumber] = useState(0);\n\n   useEffect(() => {\n      bubbles();\n      fetch(`${API_BASE_URL}/stars`).then((res) => {\n         res.json().then((data) => {\n            setStarNumber(data.stars);\n         });\n      });\n   }, []);\n\n   function increaseStars() {\n      fetch(`${API_BASE_URL}/increaseStars`).then((res) => {\n         setStarNumber(StarNumber + 1);\n         fetch(\"http://localhost:5000/stars\").then((res) => {\n            res.json().then((data) => {\n               setStarNumber(data.stars);\n            });\n         });\n      });\n   }\n\n   function hearts() {\n      $.each($(\".emoji\"), function () {\n         var heartcount = ($(this).width() / 50) * 5;\n         for (var i = 0; i <= heartcount; i++) {\n            var size = Math.floor(Math.random() * 6) + 6;\n            $(this).append(\n               '<span class=\"particle\" style=\"top:' +\n                  (Math.floor(Math.random() * 60) + 20) +\n                  \"%; left:\" +\n                  Math.floor(Math.random() * 95) +\n                  \"%;width:\" +\n                  size +\n                  \"px; height:\" +\n                  size +\n                  \"px;animation-delay: \" +\n                  Math.random() +\n                  's;\"></span>'\n            );\n         }\n      });\n   }\n\n   function bubbles() {\n      $.each($(\".emoji\"), function () {\n         var bubblecount = ($(this).width() / 50) * 10;\n         for (var i = 0; i <= bubblecount; i++) {\n            var size = Math.floor(Math.random() * 4) + 6;\n            $(this).append(\n               '<span class=\"cercle-particle\" style=\"top:' +\n                  (Math.floor(Math.random() * 60) + 20) +\n                  \"%; left:\" +\n                  Math.floor(Math.random() * 95) +\n                  \"%;width:\" +\n                  size +\n                  \"px; height:\" +\n                  size +\n                  \"px;animation-delay: \" +\n                  Math.floor(Math.random() * 3) +\n                  's;\"></span>'\n            );\n         }\n      });\n   }\n\n   function removeParticle() {\n      var timeout = setTimeout(() => {\n         if ($(\".particle\").length > 0) {\n            $(\".particle\")[0].remove();\n            removeParticle();\n         } else {\n            clearInterval(timeout);\n         }\n      }, 300);\n   }\n\n   function animate() {\n      if (currentEmoji <= 10) {\n         $(\".emoji\").animate(\n            { borderSpacing: 0.1 },\n            {\n               start: function () {\n                  $(this).css(\"transform\", \"scale(1.15)\");\n               },\n               duration: 200,\n               easing: \"linear\",\n               done: function () {\n                  $(\".emoji\").css(\"transform\", \"scale(1)\");\n                  $(\"#emoji-img\").attr(\n                     \"src\",\n                     \"/assets/icons/emoji-\" + currentEmoji + \".png\"\n                  );\n                  setCurrentEmoji(currentEmoji + 1);\n               },\n            }\n         );\n         hearts();\n         setTimeout(() => {\n            removeParticle();\n         }, 1000);\n         //setStarNumber(StarNumber + 1);\n         increaseStars();\n      }\n   }\n\n   return (\n      <div onClick={animate} className=\"emoji\">\n         <img id=\"emoji-img\" src=\"/assets/icons/emoji-1.png\" alt=\"\" />\n         <span className=\"start__number\">{StarNumber}</span>\n      </div>\n   );\n}\n\nexport default Emoji;\n","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Navbar from \"./components/navbar\";\nimport AppRoutes from \"routes/index\";\nimport Emoji from \"components/emoji\";\n\nfunction App() {\n   return (\n      <BrowserRouter>\n         <div className=\"main__container rounded-sm bg-white\">\n            <Navbar />\n            <div className=\"p-8\">\n               <AppRoutes />\n            </div>\n            <Emoji />\n         </div>\n      </BrowserRouter>\n   );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./assets/css/tailwind.css\";\nimport \"./styles/main.scss\";\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}